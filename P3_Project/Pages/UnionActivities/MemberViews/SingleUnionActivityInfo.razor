@page "/begivenheder/{id:int}"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using P3_Project.Models
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _UserManager
@inject IHttpContextAccessor httpContextAccessor
@inject IUnionActivityData _db
@inject IRegistrationData _rdb
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        @if (unionActivity == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="container col-lg-12 col-md-12 col-12" style="">
                <h3>Tilmeld - @unionActivity.Name</h3>
                <div class="row col-lg-12" style="">
                    <div class="col-md-12 col-lg-12" @onclick="() => GoToUAOverview()" style="font-weight: bold; padding-bottom: 10px;">
                        &lt; Tilbage
                    </div>
                    <div class="col-md-12 col-lg-12 active" style="background-color: #3846c0; border-radius: 10px;">
                        <div class="col-12 h4" style="text-align: left; font-weight: bold; color: white; padding-top: 10px;">Beskrivelse</div>
                        <div class="col-12" style="background-color: white; border-radius: 10px; padding-left: 10px; padding-right: 7px; min-height: 100px; padding-top: 10px; padding-bottom: 10px;"><p>@unionActivity.Description</p></div>
                        <div class="col" style="padding: 17px;" align="center">
                            @if (IsRegistered(unionActivity.Id))
                            {
                                <button class="btn btn-danger " @onclick="() => CancelRegistration(unionActivity.Id)">Afmeld</button>
                            }
                            else
                            {
                                <button class="btn btn-light" @onclick="() => GoToRegistration(unionActivity.Id)">Tilmeld</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p>You're not logged in.</p>
    </NotAuthorized>
</AuthorizeView>







@code {
    [Parameter]
    public int Id { get; set; }



    private UnionActivityModel unionActivity;
    private List<UnionActivityModel> unionActivities;
    private List<RegistrationModel> CurrentUserRegistrations;
    private RegistrationModel Delete;
    private string currentUserId;

    protected override async Task OnInitializedAsync()
    {
        unionActivity = await _db.GetSingleUnionActivity(Id);
        currentUserId = _UserManager.GetUserId(httpContextAccessor.HttpContext.User);
        CurrentUserRegistrations = await _rdb.GetCurrentUserRegistrations(currentUserId);
    }



    private UnionActivityModel GetSingleUnionActivity(int id)
    {
        foreach (var unionActivity in unionActivities)
        {
            if (unionActivity.Id == id)
            {
                return unionActivity;
                break;
            }
            else
            {

            }
        }
        return unionActivity;
    }

    private bool IsRegistered(int unionActivityId)
    {
        foreach (var registration in CurrentUserRegistrations)
        {
            if (registration.UnionActivityID == unionActivityId)
            {
                return true;
            }
        }
        return false;
    }
    async void CancelRegistration(int unionActivityId)
    {
        await _rdb.CancelRegistration(currentUserId, unionActivityId);

        NavigationManager.NavigateTo("begivenheder");
    }

    void GoToRegistration(int id)
    {
        NavigationManager.NavigateTo($"begivenheder/tilmeld/{id}");
    }
    void GoToUAOverview()
    {
        NavigationManager.NavigateTo($"/begivenheder");
    }

    
}
