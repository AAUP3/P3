@page "/begivenheder/tilmeld/{id:int}"

@using DataAccessLibrary.Models
@using DataAccessLibrary
@using P3_Project.Models


@inject NavigationManager NavigationManager
@inject IRegistrationData _db
@inject IUnionActivityData _ua



<h3>Tilmeld "@unionActivity.Name"</h3> <!--not sure "" are needed here-->
@if (unionActivity == null)
{
    <p>Loading...</p>
}
else
{
    <div style="background-color: #3846c0; border-radius: 10px; padding: 5px;">
        <EditForm Model="@DisplayRegistration" OnValidSubmit="@Submit" class="">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!--Don't know if we can use validation in this form, because the values that are required can be different from one activity to the other.-->
            @if (unionActivity.RequireName)
            {
                <div>
                    <label for="name">Navn</label>
                    <InputText id="name" class="form-control" @bind-Value="DisplayRegistration.Name"></InputText>
                </div>
            }
            @if (unionActivity.RequireEmail)
            {
                <div>
                    <label for="email">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="DisplayRegistration.Email"></InputText>
                </div>
            }
            @if (unionActivity.RequirePhonenumber)
            {
                <div>
                    <label for="phonenumber">Telefonnummer</label>
                    <InputText id="phonenumber" class="form-control form-style" @bind-Value="DisplayRegistration.Phonenumber"></InputText>
                </div>
            }
            @if (unionActivity.Information1 != "")
            {
                <div>
                    <label for="information1">@unionActivity.Information1</label>
                    <InputText id="information1" class="form-control form-style" @bind-Value="DisplayRegistration.Information1"></InputText>
                </div>
            }
            @if (unionActivity.Information2 != "")
            {
                <div>
                    <label for="information2">@unionActivity.Information2</label>
                    <InputText id="information2" class="form-control form-style" @bind-Value="DisplayRegistration.Information2"></InputText>
                </div>
            }
            @if (unionActivity.Information3 != "")
            {
                <div>
                    <label for="information3">@unionActivity.Information3</label>
                    <InputText id="information3" class="form-control form-style" @bind-Value="DisplayRegistration.Information3"></InputText>
                </div>
            }
            @if (unionActivity.Information4 != "")
            {
                <div>
                    <label for="information4">@unionActivity.Information4</label>
                    <InputText id="information4" class="form-control form-style" @bind-Value="DisplayRegistration.Information4"></InputText>
                </div>
            }
            @if (unionActivity.Information5 != "")
            {
                <div>
                    <label for="information5">@unionActivity.Information5</label>
                    <InputText id="information5" class="form-control form-style" @bind-Value="DisplayRegistration.Information5"></InputText>
                </div>
            }
            @if (unionActivity.IsYearlyActivity && unionActivity.AllowGroupRegistration)
            {
                <div>
                    <div>
                        <label for="flightno">Fly reg.</label>
                        <InputText id="flightno" class="form-control form-style" @bind-Value="DisplayRegistration.FlightRegistrationNumber"></InputText>
                    </div>
                    <div>
                        <label for="type">Type</label>
                        <InputText id="type" class="form-control form-style" @bind-Value="DisplayRegistration.Type"></InputText>
                    </div>
                    <div>
                        <label for="mtow">MTOW</label>
                        <InputNumber id="mtow" class="form-control form-style" @bind-Value="DisplayRegistration.MaxTakeoffWeight"></InputNumber>
                    </div>
                    <div>
                        <label for="club">Klub</label>
                        <InputText id="club" class="form-control form-style" @bind-Value="DisplayRegistration.Club"></InputText>
                    </div>
                    <div>
                        <label for="startdestination">Startdestination</label>
                        <InputText id="startdestination" class="form-control form-style" @bind-Value="DisplayRegistration.StartDestination"></InputText>
                    </div>
                </div>
                <br />
                <div>
                    @foreach (var displayRegistration in DisplayRegistrations)
                    {
                        <div>
                            <label for="name">Navn</label>
                            <InputText id="email" class="form-control form-style" @bind-Value="displayRegistration.Name"></InputText>
                        </div>
                        <div>
                            <label for="email">E-mail</label>
                            <InputText id="email" class="form-control form-style" @bind-Value="displayRegistration.Email"></InputText>
                        </div>
                        <div>
                            <label for="phonenumber">Telefonnummer</label>
                            <InputText id="phonenumber" class="form-control form-style" @bind-Value="displayRegistration.Phonenumber"></InputText>
                        </div>
                        <div>
                            <label for="participationtype">Deltagertype</label>
                            <InputSelect id="participationtype" class="form-control" style="max-width: 10%; min-width: 100px;" @bind-Value="displayRegistration.ParticipantType">
                                <option value="" selected>-vælg type-</option>
                                <option value="PIC">PIC</option>
                                <option value="COP">COP</option>
                                <option value="PAX">PAX</option>
                            </InputSelect>
                        </div>
                    }


                    <div class="" style="text-align: center;">
                        <button type="button" class="btn btn-success" @onclick="Add">
                            <i class="fa-solid fa-user-plus"></i>
                            Tilføj Deltager
                        </button>
                        <button type="button" class="btn btn-warning" @onclick="Remove">
                            <i class="fa-solid fa-user-minus"></i>
                            Fjern Deltager
                        </button>
                    </div>
                </div>
            }
            else if (unionActivity.IsYearlyActivity && unionActivity.AllowRegistration)
            {
                <div>
                    <div>
                        <label for="flightno">Fly reg.</label>
                        <InputText id="flightno" class="form-control form-style" @bind-Value="DisplayRegistration.FlightRegistrationNumber"></InputText>
                    </div>
                    <div>
                        <label for="type">Type</label>
                        <InputText id="type" class="form-control" @bind-Value="DisplayRegistration.Type"></InputText>
                    </div>
                    <div>
                        <label for="mtow">MTOW</label>
                        <InputNumber id="mtow" class="form-control form-style" @bind-Value="DisplayRegistration.MaxTakeoffWeight"></InputNumber>
                    </div>
                    <div>
                        <label for="club">Klub</label>
                        <InputText id="club" class="form-control" @bind-Value="DisplayRegistration.Club"></InputText>
                    </div>
                    <div>
                        <label for="startdestination">Startdestination</label>
                        <InputText id="startdestination" class="form-control" @bind-Value="DisplayRegistration.StartDestination"></InputText>
                    </div>
                </div>
            }


            <button type="submit" class="btn btn-primary">Tilmeld</button>
            <button type="button" class="btn btn-danger" @onclick="GoBack">Annuller</button>
            <!-- <button type="button" @onclick="showNUmber">Nummer</button>
            @if (test)
            {
            @Registration.Phonenumber
            }-->
        </EditForm>
    </div>
}




@code {

    //RegistrationModel Registration = new RegistrationModel();
    DisplayRegistrationModel DisplayRegistration = new DisplayRegistrationModel();

    [Parameter]
    public int Id { get; set; }
    string format = "## ## ## ##";
    public bool test = false;

    public UnionActivityModel unionActivity = new UnionActivityModel();
    public List<UnionActivityModel> unionActivities = new List<UnionActivityModel>();
    public List<DisplayRegistrationModel> DisplayRegistrations = new List<DisplayRegistrationModel>();





    // Only works one time, can't convert back and forth
    //public void showNUmber()
    //{
    //    if (test)
    //    {
    //        test = false;
    //    }
    //    else
    //    {
    //        test = true;
    //        Registration.Phonenumber = Convert.ToInt64(Registration.Phonenumber).ToString(format);
    //    }
    //}


    protected override async Task OnInitializedAsync()
    {
        //DisplayRegistrations.Add(DisplayRegistration);
        unionActivities = await _ua.GetUnionActivities();
        unionActivity = await _ua.GetSingleUnionActivity((int)Id);
    }

    public void AddParticipant()
    {

    }

    private async Task Submit()
    {
        //Registration.UnionActivityID = Id;
        // Maybe to some testing that the phonenumber is the corret number of numbers???
        //Registration.Phonenumber = Convert.ToInt64(Registration.Phonenumber).ToString(format);

        //Registration.FlightRegistrationNumber = DisplayRegistration.FlightRegistrationNumber;
        //Registration.Type = DisplayRegistration.Type;
        //Registration.MaxTakeoffWeight = DisplayRegistration.MaxTakeoffWeight;
        //Registration.Club = DisplayRegistration.Club;
        //Registration.StartDestination = DisplayRegistration.StartDestination;
        //await _db.InsertRegistration(Registration);



        //Maybe add an if-statement checking for if the activity is the yearly, this will prevent us from executing the foreach loop everytime.



        foreach (var displayRegistration in DisplayRegistrations)
        {
            RegistrationModel r = new RegistrationModel
                {
                    FlightRegistrationNumber = DisplayRegistration.FlightRegistrationNumber,
                    Type = DisplayRegistration.Type,
                    MaxTakeoffWeight = DisplayRegistration.MaxTakeoffWeight,
                    Club = DisplayRegistration.Club,
                    StartDestination = DisplayRegistration.StartDestination,
                    UnionActivityID = Id,

                    Name = displayRegistration.Name,
                    Email = displayRegistration.Email,
                    Phonenumber = Convert.ToInt64(displayRegistration.Phonenumber).ToString(format),
                    ParticipantType = displayRegistration.ParticipantType
                };

            await _db.InsertRegistration(r);

        }



        // await _db.InsertRegistration(Registration);



        // for-loop running through all guests, inserting them if name is not null

        //Registration = new RegistrationModel();
        //DisplayRegistration = new DisplayRegistrationModel();


        NavigationManager.NavigateTo("/");
    }


    public void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }


    void Add()
    {
        DisplayRegistrations.Add(new DisplayRegistrationModel());

    }

    void Remove()
    {
        int count = DisplayRegistrations.Count;
        DisplayRegistrations.RemoveAt(count - 1);

    }
}
