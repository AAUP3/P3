@page "/begivenheder/tilmeld/{id:int}"

@using DataAccessLibrary.Models
@using DataAccessLibrary


@inject NavigationManager NavigationManager
@inject IRegistrationData _db



<h3>Tilmeld</h3>

<EditForm Model="@Registration" OnSubmit="@Submit" class="form-control">
    <div>
        <div>
            <label for="flightno">Fly reg.</label>
            <InputText id="flightno" @bind-Value="Registration.FlightRegistrationNumber"></InputText>
        </div>
        <div>
            <label for="type">Type</label>
            <InputText id="type" @bind-Value="Registration.Type"></InputText>
        </div>
        <div>
            <label for="mtow">MTOW</label>
            <InputNumber id="mtow" @bind-Value="Registration.MaxTakeoffWeight"></InputNumber>
        </div>
        <div>
            <label for="club">Klub</label>
            <InputText id="club" @bind-Value="Registration.Club"></InputText>
        </div>
        <div>
            <label for="startdestination">Startdestination</label>
            <InputText id="startdestination" @bind-Value="Registration.StartDestination"></InputText>
        </div>
    </div>
    <br />
    <div>
        @foreach (var registration in Registrations) {
        <div>
            <label for="name">Navn</label>
            <InputText id="email" @bind-Value="registration.Name"></InputText>
        </div>
        <div>
            <label for="email">E-mail</label>
            <InputText id="email" @bind-Value="registration.Email"></InputText>
        </div>
        <div>
            <label for="phonenumber">Telefonnummer</label>
            <InputText id="phonenumber" @bind-Value="registration.Phonenumber"></InputText>
        </div>
        <div>
            <label for="participationtype">Deltagertype</label>
            <InputSelect id="participationtype" @bind-Value="registration.ParticipantType">
                <option value="" selected >-vælg type-</option>
                <option value="PIC" >PIC</option>
                <option value="COP" >COP</option>
                <option value="PAX" >PAX</option>
            </InputSelect>
        </div>
        }


    <div>
        <button type="submit" class="btn btn-primary">Tilmeld</button>
        <button type="button" class="btn btn-danger" @onclick="GoBack">Annuller</button>
        <button type="button" @onclick="Add">tilføj</button>
    </div>
    </div>
    

    <button type="button" @onclick="showNUmber">Nummer</button>
    @if (test)
    {
        @Registration.Phonenumber
    }
</EditForm>j


@code {
    [Parameter]
    public int Id { get; set; }
    string format = "## ## ## ##";
    public bool test = false;

    public List<RegistrationModel> Registrations = new List<RegistrationModel>();


    // Only works one time, can't convert back and forth
    public void showNUmber()
    {
        if (test)
        {
            test = false;
        }
        else
        {
            test = true;
            Registration.Phonenumber = Convert.ToInt64(Registration.Phonenumber).ToString(format);
        }
    }

    RegistrationModel Registration = new RegistrationModel();


    protected override void OnInitialized()
    {
        Registrations.Add(Registration);
    }

    public void AddParticipant()
    {

    }

    private async Task Submit()
    {
        //Registration.UnionActivityID = Id;
        // Maybe to some testing that the phonenumber is the corret number of numbers???
        //Registration.Phonenumber = Convert.ToInt64(Registration.Phonenumber).ToString(format);

        foreach (var registration in Registrations)
        {
            registration.FlightRegistrationNumber = Registration.FlightRegistrationNumber;
            registration.UnionActivityID = Id;
            registration.Phonenumber = Convert.ToInt64(registration.Phonenumber).ToString(format);
            await _db.InsertRegistration(registration);
        }


        // await _db.InsertRegistration(Registration);



        // for-loop running through all guests, inserting them if name is not null

        Registration = new RegistrationModel();


        NavigationManager.NavigateTo("/");
    }


    public void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }


    void Add()
    {
        Registrations.Add(new RegistrationModel());
        
    }
}
