@page "/begivenheder/opretbegivenhed"


@using DataAccessLibrary
@using DataAccessLibrary.Models
@using P3_Project.Models
@using System
@using System.Data



@code {



    private List<InformationFieldModel> infoFields = new List<InformationFieldModel>();
    private List<InformationFieldModel> pInfoFields = new List<InformationFieldModel>();

    private DisplayUnionActivityModel newUnionActivity = new DisplayUnionActivityModel();
    //used for unit test
    private UnionActivityModel testUnionActivity = new UnionActivityModel();


    private int NumberOfInformation = 0;
    private int NumberOfPInformation = 0;
    private int infoCount;
    private int pInfoCount;



    public bool FirstScreen = true;


    protected override void OnInitialized()
    {
        //unionActivities.Add(unionActivity);
        newUnionActivity.DateOfActivity = DateTime.Today;
    }







    void AddNewInformation()
    {
        // unionActivities.Add(new UnionActivityModel()); old???
        if (NumberOfInformation < 5)
        {
            NumberOfInformation++;
            infoFields.Add(new InformationFieldModel(""));

        }
    }

    void AddNewPInformation()
    {
        // unionActivities.Add(new UnionActivityModel()); old???
        if (NumberOfPInformation < 5)
        {
            NumberOfPInformation++;
            pInfoFields.Add(new InformationFieldModel(""));

        }
    }

    void RemovePInformation()
    {
        if (NumberOfPInformation > 0)
        {
            NumberOfPInformation--;
            pInfoCount = pInfoFields.Count;
            pInfoFields.RemoveAt(pInfoCount - 1);
        }

    }
    void RemoveInformation()
    {
        if (NumberOfInformation > 0)
        {
            NumberOfInformation--;
            infoCount = infoFields.Count;
            infoFields.RemoveAt(infoCount - 1);
        }
    }

    void Add(string information)
    {

    }

    public static UnionActivityModel InsertUnionActivity(int infoCount, int pInfoCount, List<InformationFieldModel> infoFields, List<InformationFieldModel> pInfoFields, DisplayUnionActivityModel newUnionActivity, UnionActivityModel testUnionActivity)
    {
        infoCount = infoFields.Count;
        pInfoCount = pInfoFields.Count;

        //make information lists into arrays with 5 strings
        string[] info = new string[] { "", "", "", "", "" };
        for (int i = 0; i < infoCount; i++)
        {
            info[i] = infoFields[i].Name;
        }
        string[] pInfo = new string[] { "", "", "", "", "" };
        for (int i = 0; i < pInfoCount; i++)
        {
            pInfo[i] = pInfoFields[i].Name;
        }
        //create union activity object that is sent to the database
        UnionActivityModel ua = new UnionActivityModel
            {
                Name = newUnionActivity.Name,
                Description = newUnionActivity.Description,
                DateOfActivity = newUnionActivity.DateOfActivity,
                //IsVisible = newUnionActivity.IsVisible
                IsVisible = false,
                RequireName = newUnionActivity.RequireName,
                RequireEmail = newUnionActivity.RequireEmail,
                RequirePhonenumber = newUnionActivity.RequirePhonenumber,
                Information1 = info[0],
                Information2 = info[1],
                Information3 = info[2],
                Information4 = info[3],
                Information5 = info[4],
                PInformation1 = pInfo[0],
                PInformation2 = pInfo[1],
                PInformation3 = pInfo[2],
                PInformation4 = pInfo[3],
                PInformation5 = pInfo[4],
                IsYearlyActivity = newUnionActivity.IsYearlyActivity,
                AllowRegistration = newUnionActivity.AllowRegistration,
                AllowGroupRegistration = newUnionActivity.AllowGroupRegistration
            };


        //unit testing
        testUnionActivity = ua;
        //await _db.InsertUnionActivity(ua);
        return ua;
        //reset used models and containers
        //newUnionActivity = new DisplayUnionActivityModel();
        //infoFields = new List<InformationFieldModel>();
        //pInfoFields = new List<InformationFieldModel>();
        //info = new string[] { "", "", "", "", ""};

        //NavigationManager.NavigateTo("begivenheder");
    }


    //void GoToUAOverview()
    //{
    //    NavigationManager.NavigateTo($"/begivenheder");
    //}


    void NextScreen()
    {
        FirstScreen = false;
    }

    void PreviousScreen()
    {
        FirstScreen = true;
    }

}
